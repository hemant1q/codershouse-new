{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.integer = exports.decimal = exports.rfc2822DateTime = exports.iso8601DateTime = exports.iso8601Date = void 0;\nconst dayjs_1 = __importDefault(require(\"dayjs\"));\nconst utc_1 = __importDefault(require(\"dayjs/plugin/utc\"));\ndayjs_1.default.extend(utc_1.default);\n/**\n * @namespace deserialize\n */\n/**\n * Parse a string into a Date object\n *\n * @param s - Date string in YYYY-MM-DD format\n * @returns Date object, or the original date string if the argument is not a valid date\n */\nfunction iso8601Date(s) {\n  return parseDate(s, \"YYYY-MM-DD\");\n}\nexports.iso8601Date = iso8601Date;\n/**\n * Parse a string into a Date object\n *\n * @param s - Date string in YYYY-MM-DD[T]HH:mm:ss[Z] format\n * @returns Date object, or the original date string if the argument is not a valid date\n */\nfunction iso8601DateTime(s) {\n  return parseDate(s, \"YYYY-MM-DD[T]HH:mm:ss[Z]\");\n}\nexports.iso8601DateTime = iso8601DateTime;\n/**\n * Parse a string into a Date object\n *\n * @param s - Date string in ddd, DD MMM YYYY HH:mm:ss [+0000] format\n * @returns Date object, or the original date string if the argument is not a valid date\n */\nfunction rfc2822DateTime(s) {\n  return parseDate(s, \"ddd, DD MMM YYYY HH:mm:ss [+0000]\");\n}\nexports.rfc2822DateTime = rfc2822DateTime;\n/**\n * Parse a string into a decimal\n *\n * @param d - Decimal value as string\n * @returns Number, or the original string if the argument is NaN\n */\nfunction decimal(d) {\n  return parseNumber(d, parseFloat);\n}\nexports.decimal = decimal;\n/**\n * Parse a string into a integer\n *\n * @param i - Integer value as string\n * @returns Number, or the original string if the argument is NaN\n */\nfunction integer(i) {\n  return parseNumber(i, parseInt);\n}\nexports.integer = integer;\nfunction parseDate(s, format) {\n  var m = dayjs_1.default.utc(s, format);\n  if (m.isValid()) {\n    return m.toDate();\n  }\n  return s;\n}\nfunction parseNumber(n, parser) {\n  var parsed = parser(n);\n  if (typeof parsed === \"number\" && isNaN(parsed)) {\n    return n;\n  }\n  return parsed;\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","integer","decimal","rfc2822DateTime","iso8601DateTime","iso8601Date","dayjs_1","require","utc_1","default","extend","s","parseDate","d","parseNumber","parseFloat","i","parseInt","format","m","utc","isValid","toDate","n","parser","parsed","isNaN"],"sources":["C:/Users/mukta/node_modules/twilio/lib/base/deserialize.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.integer = exports.decimal = exports.rfc2822DateTime = exports.iso8601DateTime = exports.iso8601Date = void 0;\nconst dayjs_1 = __importDefault(require(\"dayjs\"));\nconst utc_1 = __importDefault(require(\"dayjs/plugin/utc\"));\ndayjs_1.default.extend(utc_1.default);\n/**\n * @namespace deserialize\n */\n/**\n * Parse a string into a Date object\n *\n * @param s - Date string in YYYY-MM-DD format\n * @returns Date object, or the original date string if the argument is not a valid date\n */\nfunction iso8601Date(s) {\n    return parseDate(s, \"YYYY-MM-DD\");\n}\nexports.iso8601Date = iso8601Date;\n/**\n * Parse a string into a Date object\n *\n * @param s - Date string in YYYY-MM-DD[T]HH:mm:ss[Z] format\n * @returns Date object, or the original date string if the argument is not a valid date\n */\nfunction iso8601DateTime(s) {\n    return parseDate(s, \"YYYY-MM-DD[T]HH:mm:ss[Z]\");\n}\nexports.iso8601DateTime = iso8601DateTime;\n/**\n * Parse a string into a Date object\n *\n * @param s - Date string in ddd, DD MMM YYYY HH:mm:ss [+0000] format\n * @returns Date object, or the original date string if the argument is not a valid date\n */\nfunction rfc2822DateTime(s) {\n    return parseDate(s, \"ddd, DD MMM YYYY HH:mm:ss [+0000]\");\n}\nexports.rfc2822DateTime = rfc2822DateTime;\n/**\n * Parse a string into a decimal\n *\n * @param d - Decimal value as string\n * @returns Number, or the original string if the argument is NaN\n */\nfunction decimal(d) {\n    return parseNumber(d, parseFloat);\n}\nexports.decimal = decimal;\n/**\n * Parse a string into a integer\n *\n * @param i - Integer value as string\n * @returns Number, or the original string if the argument is NaN\n */\nfunction integer(i) {\n    return parseNumber(i, parseInt);\n}\nexports.integer = integer;\nfunction parseDate(s, format) {\n    var m = dayjs_1.default.utc(s, format);\n    if (m.isValid()) {\n        return m.toDate();\n    }\n    return s;\n}\nfunction parseNumber(n, parser) {\n    var parsed = parser(n);\n    if (typeof parsed === \"number\" && isNaN(parsed)) {\n        return n;\n    }\n    return parsed;\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACG,OAAO,GAAGH,OAAO,CAACI,eAAe,GAAGJ,OAAO,CAACK,eAAe,GAAGL,OAAO,CAACM,WAAW,GAAG,KAAK,CAAC;AACpH,MAAMC,OAAO,GAAGZ,eAAe,CAACa,OAAO,CAAC,OAAO,CAAC,CAAC;AACjD,MAAMC,KAAK,GAAGd,eAAe,CAACa,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC1DD,OAAO,CAACG,OAAO,CAACC,MAAM,CAACF,KAAK,CAACC,OAAO,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASJ,WAAWA,CAACM,CAAC,EAAE;EACpB,OAAOC,SAAS,CAACD,CAAC,EAAE,YAAY,CAAC;AACrC;AACAZ,OAAO,CAACM,WAAW,GAAGA,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,eAAeA,CAACO,CAAC,EAAE;EACxB,OAAOC,SAAS,CAACD,CAAC,EAAE,0BAA0B,CAAC;AACnD;AACAZ,OAAO,CAACK,eAAe,GAAGA,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,eAAeA,CAACQ,CAAC,EAAE;EACxB,OAAOC,SAAS,CAACD,CAAC,EAAE,mCAAmC,CAAC;AAC5D;AACAZ,OAAO,CAACI,eAAe,GAAGA,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,OAAOA,CAACW,CAAC,EAAE;EAChB,OAAOC,WAAW,CAACD,CAAC,EAAEE,UAAU,CAAC;AACrC;AACAhB,OAAO,CAACG,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,OAAOA,CAACe,CAAC,EAAE;EAChB,OAAOF,WAAW,CAACE,CAAC,EAAEC,QAAQ,CAAC;AACnC;AACAlB,OAAO,CAACE,OAAO,GAAGA,OAAO;AACzB,SAASW,SAASA,CAACD,CAAC,EAAEO,MAAM,EAAE;EAC1B,IAAIC,CAAC,GAAGb,OAAO,CAACG,OAAO,CAACW,GAAG,CAACT,CAAC,EAAEO,MAAM,CAAC;EACtC,IAAIC,CAAC,CAACE,OAAO,CAAC,CAAC,EAAE;IACb,OAAOF,CAAC,CAACG,MAAM,CAAC,CAAC;EACrB;EACA,OAAOX,CAAC;AACZ;AACA,SAASG,WAAWA,CAACS,CAAC,EAAEC,MAAM,EAAE;EAC5B,IAAIC,MAAM,GAAGD,MAAM,CAACD,CAAC,CAAC;EACtB,IAAI,OAAOE,MAAM,KAAK,QAAQ,IAAIC,KAAK,CAACD,MAAM,CAAC,EAAE;IAC7C,OAAOF,CAAC;EACZ;EACA,OAAOE,MAAM;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}